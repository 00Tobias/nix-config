#+TITLE:  Literate config for my editor
#+AUTHOR: Toxic
#+STARTUP: overview

* Multimedia
** EMMS
*** TODO

** Eva
An "Emacs based Virtual Assistant"
#+begin_src emacs-lisp :tangle packages.el
(package! eva
  :recipe (:host github :repo "meedstrom/eva"
           :files (:defaults "assets"  "renv" "*.R" "*.gnuplot")))
#+end_src
#+begin_src emacs-lisp :tangle config.el
(use-package! eva)
#+end_src

** emacs-webkit
Full-fledged browser in Emacs
#+begin_src emacs-lisp :tangle no
(package! webkit
  :recipe (:host github :repo "akirakyle/emacs-webkit"
           :branch "main"
           :files (:defaults "*.js" "*.css" "*.so")
           :pre-build ("make")))
#+end_src
#+begin_src emacs-lisp :tangle no
(use-package! webkit)
(use-package! webkit-ace)
#+end_src

** Elpher
drew devault sim
#+begin_src emacs-lisp :tangle packages.el
(package! elpher)
#+end_src
#+begin_src emacs-lisp :tangle config.el
(use-package! elpher)
#+end_src

* Bindings
** Boon
#+begin_src emacs-lisp :tangle no
(package! boon)
#+end_src
#+begin_src emacs-lisp :tangle no
(use-package! boon-qwerty
  :init
  (boon-mode)
  :config
  (define-key boon-moves-map "รถ"  'boon-smarter-forward))
#+end_src

** Symex
#+begin_src emacs-lisp :tangle packages.el
(package! symex)
#+end_src
#+begin_src emacs-lisp :tangle config.el
(use-package! symex
  :after (evil)
  ;; Use symex as normal mode in lisp modes
  :hook (((clojure-mode
           emacs-lisp-mode
           lisp-mode
           racket-mode) . (lambda ()
                            (define-key evil-visual-state-local-map (kbd "<escape>") 'symex-mode-interface) ; Is this a problem?
                            (define-key evil-replace-state-local-map (kbd "<escape>") 'symex-mode-interface)
                            (define-key evil-normal-state-local-map (kbd "<escape>") 'symex-mode-interface)
                            (define-key evil-insert-state-local-map (kbd "<escape>") 'symex-mode-interface)
                            (local-set-key (kbd "C-<escape>") 'evil-normal-state)
                            (symex-mode))))
  ;; I use a bar cursor in insert mode, this sets it back to a box in symex-mode
  :init (add-hook 'symex-editing-mode-hook (lambda () (setq cursor-type 'box)))
  :config
  (symex-initialize))
#+end_src

* User Interface
** Font
 Set the font
 #+begin_src emacs-lisp :tangle config.el
(setq doom-font (font-spec :family "Hack" :size 12))
 #+end_src

** Theme
Uses my custom theme in =themes=
#+begin_src emacs-lisp :tangle config.el
(setq doom-theme 'doom-one-darker)
#+end_src

** Modeline
Customize doom-modeline
#+begin_src emacs-lisp :tangle config.el
(setq doom-modeline-major-mode-icon t)
#+end_src

** Line numbers
#+begin_src emacs-lisp :tangle config.el
(setq display-line-numbers-type 't)
#+end_src

* Programming
** Tree sitter
#+begin_src emacs-lisp :tangle packages.el
(package! tree-sitter)
#+end_src
#+begin_src emacs-lisp :tangle config.el
(use-package! tree-sitter
  :config
  (global-tree-sitter-mode)
  (add-hook 'tree-sitter-after-on-hook #'tree-sitter-hl-mode)
  ;; Fix compatibility with rustic-mode
  (add-to-list 'tree-sitter-major-mode-language-alist '(rustic-mode . rust))
  
  ;; Add a few extra langs I use
  (add-to-list 'tree-sitter-major-mode-language-alist '(fennel-mode . fennel))
  (add-to-list 'tree-sitter-major-mode-language-alist '(nix-mode . nix))
  (add-to-list 'tree-sitter-major-mode-language-alist '(elisp-mode . elisp))
  (add-to-list 'tree-sitter-major-mode-language-alist '(zig-mode . zig)))
#+end_src

** howdoyou
Stackoverflow answers in Emacs
#+begin_src emacs-lisp :tangle packages.el
(package! howdoyou)
#+end_src
#+begin_src emacs-lisp :tangle config.el
(use-package! howdoyou)
#+end_src

** Langs
*** Nix
Currently doom emacs uses nixfmt, I prefer nixpkgs-fmt to it.
This should be available as a module in Doom once
https://github.com/hlissner/doom-emacs/issues/4526 is merged
#+begin_src emacs-lisp :tangle packages.el
(package! nixpkgs-fmt)
#+end_src
#+begin_src emacs-lisp :tangle config.el
(use-package! nixpkgs-fmt
  :config
  (add-hook 'nix-mode-hook 'nixpkgs-fmt-on-save-mode))
#+end_src

Doom doesn't have a `+lsp` flag for :nix
#+begin_src emacs-lisp :tangle no
(add-hook 'nix-mode-local-vars-hook #'lsp!)
#+end_src
* Misc
** Fireplace
Keeps me warm during the cold winter nights
#+begin_src emacs-lisp :tangle packages.el
(package! fireplace)
#+end_src
#+begin_src emacs-lisp :tangle config.el
(use-package! fireplace)
#+end_src

